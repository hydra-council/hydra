// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: manga/v1/manga.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewPluginRequest) Reset() {
	*x = NewPluginRequest{}
	mi := &file_manga_v1_manga_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPluginRequest) ProtoMessage() {}

func (x *NewPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPluginRequest.ProtoReflect.Descriptor instead.
func (*NewPluginRequest) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{0}
}

type NewPluginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewPluginResponse) Reset() {
	*x = NewPluginResponse{}
	mi := &file_manga_v1_manga_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPluginResponse) ProtoMessage() {}

func (x *NewPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPluginResponse.ProtoReflect.Descriptor instead.
func (*NewPluginResponse) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{1}
}

type DeletePluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePluginRequest) Reset() {
	*x = DeletePluginRequest{}
	mi := &file_manga_v1_manga_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePluginRequest) ProtoMessage() {}

func (x *DeletePluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePluginRequest.ProtoReflect.Descriptor instead.
func (*DeletePluginRequest) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{2}
}

type DeletePluginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePluginResponse) Reset() {
	*x = DeletePluginResponse{}
	mi := &file_manga_v1_manga_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePluginResponse) ProtoMessage() {}

func (x *DeletePluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePluginResponse.ProtoReflect.Descriptor instead.
func (*DeletePluginResponse) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{3}
}

type SearchPluginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchQuery string `protobuf:"bytes,1,opt,name=searchQuery,proto3" json:"searchQuery,omitempty"`
	PluginID    string `protobuf:"bytes,2,opt,name=pluginID,proto3" json:"pluginID,omitempty"`
}

func (x *SearchPluginRequest) Reset() {
	*x = SearchPluginRequest{}
	mi := &file_manga_v1_manga_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPluginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPluginRequest) ProtoMessage() {}

func (x *SearchPluginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPluginRequest.ProtoReflect.Descriptor instead.
func (*SearchPluginRequest) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{4}
}

func (x *SearchPluginRequest) GetSearchQuery() string {
	if x != nil {
		return x.SearchQuery
	}
	return ""
}

func (x *SearchPluginRequest) GetPluginID() string {
	if x != nil {
		return x.PluginID
	}
	return ""
}

type SearchPluginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchPluginResponse) Reset() {
	*x = SearchPluginResponse{}
	mi := &file_manga_v1_manga_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPluginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPluginResponse) ProtoMessage() {}

func (x *SearchPluginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPluginResponse.ProtoReflect.Descriptor instead.
func (*SearchPluginResponse) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{5}
}

type RefreshMangaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshMangaResponse) Reset() {
	*x = RefreshMangaResponse{}
	mi := &file_manga_v1_manga_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshMangaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshMangaResponse) ProtoMessage() {}

func (x *RefreshMangaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshMangaResponse.ProtoReflect.Descriptor instead.
func (*RefreshMangaResponse) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{6}
}

type RefreshMangaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshMangaRequest) Reset() {
	*x = RefreshMangaRequest{}
	mi := &file_manga_v1_manga_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshMangaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshMangaRequest) ProtoMessage() {}

func (x *RefreshMangaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshMangaRequest.ProtoReflect.Descriptor instead.
func (*RefreshMangaRequest) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{7}
}

// todo add more metadata fields
type MangaMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// each name should be separated by a space
	AlternateTile string          `protobuf:"bytes,2,opt,name=alternateTile,proto3" json:"alternateTile,omitempty"`
	Chapters      []*MangaChapter `protobuf:"bytes,4,rep,name=chapters,proto3" json:"chapters,omitempty"`
}

func (x *MangaMetaData) Reset() {
	*x = MangaMetaData{}
	mi := &file_manga_v1_manga_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaMetaData) ProtoMessage() {}

func (x *MangaMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaMetaData.ProtoReflect.Descriptor instead.
func (*MangaMetaData) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{8}
}

func (x *MangaMetaData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MangaMetaData) GetAlternateTile() string {
	if x != nil {
		return x.AlternateTile
	}
	return ""
}

func (x *MangaMetaData) GetChapters() []*MangaChapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

type MangaChapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterNumber        string       `protobuf:"bytes,1,opt,name=chapterNumber,proto3" json:"chapterNumber,omitempty"`
	ChapterName          string       `protobuf:"bytes,2,opt,name=chapterName,proto3" json:"chapterName,omitempty"`
	ReleaseDateInISO6801 string       `protobuf:"bytes,3,opt,name=releaseDateInISO6801,proto3" json:"releaseDateInISO6801,omitempty"`
	Pages                []*MangaPage `protobuf:"bytes,4,rep,name=pages,proto3" json:"pages,omitempty"`
}

func (x *MangaChapter) Reset() {
	*x = MangaChapter{}
	mi := &file_manga_v1_manga_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaChapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaChapter) ProtoMessage() {}

func (x *MangaChapter) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaChapter.ProtoReflect.Descriptor instead.
func (*MangaChapter) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{9}
}

func (x *MangaChapter) GetChapterNumber() string {
	if x != nil {
		return x.ChapterNumber
	}
	return ""
}

func (x *MangaChapter) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *MangaChapter) GetReleaseDateInISO6801() string {
	if x != nil {
		return x.ReleaseDateInISO6801
	}
	return ""
}

func (x *MangaChapter) GetPages() []*MangaPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

type MangaPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MangaPage) Reset() {
	*x = MangaPage{}
	mi := &file_manga_v1_manga_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MangaPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MangaPage) ProtoMessage() {}

func (x *MangaPage) ProtoReflect() protoreflect.Message {
	mi := &file_manga_v1_manga_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MangaPage.ProtoReflect.Descriptor instead.
func (*MangaPage) Descriptor() ([]byte, []int) {
	return file_manga_v1_manga_proto_rawDescGZIP(), []int{10}
}

func (x *MangaPage) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MangaPage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_manga_v1_manga_proto protoreflect.FileDescriptor

var file_manga_v1_manga_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31,
	0x22, 0x12, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x44, 0x22, 0x16, 0x0a,
	0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x4d, 0x61, 0x6e, 0x67, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x7f, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6c,
	0x65, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x6e, 0x67, 0x61, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x49,
	0x53, 0x4f, 0x36, 0x38, 0x30, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x49, 0x53, 0x4f, 0x36, 0x38,
	0x30, 0x31, 0x12, 0x29, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e,
	0x67, 0x61, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x31, 0x0a,
	0x09, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x32, 0xcd, 0x02, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x77, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x1d, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x1d,
	0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x12,
	0x1d, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x75, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x76, 0x31,
	0x42, 0x0a, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x18,
	0x68, 0x79, 0x64, 0x72, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02,
	0x08, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08, 0x4d, 0x61, 0x6e, 0x67,
	0x61, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x4d, 0x61, 0x6e, 0x67, 0x61, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x4d, 0x61,
	0x6e, 0x67, 0x61, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_manga_v1_manga_proto_rawDescOnce sync.Once
	file_manga_v1_manga_proto_rawDescData = file_manga_v1_manga_proto_rawDesc
)

func file_manga_v1_manga_proto_rawDescGZIP() []byte {
	file_manga_v1_manga_proto_rawDescOnce.Do(func() {
		file_manga_v1_manga_proto_rawDescData = protoimpl.X.CompressGZIP(file_manga_v1_manga_proto_rawDescData)
	})
	return file_manga_v1_manga_proto_rawDescData
}

var file_manga_v1_manga_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_manga_v1_manga_proto_goTypes = []any{
	(*NewPluginRequest)(nil),     // 0: manga.v1.NewPluginRequest
	(*NewPluginResponse)(nil),    // 1: manga.v1.NewPluginResponse
	(*DeletePluginRequest)(nil),  // 2: manga.v1.DeletePluginRequest
	(*DeletePluginResponse)(nil), // 3: manga.v1.DeletePluginResponse
	(*SearchPluginRequest)(nil),  // 4: manga.v1.SearchPluginRequest
	(*SearchPluginResponse)(nil), // 5: manga.v1.SearchPluginResponse
	(*RefreshMangaResponse)(nil), // 6: manga.v1.RefreshMangaResponse
	(*RefreshMangaRequest)(nil),  // 7: manga.v1.RefreshMangaRequest
	(*MangaMetaData)(nil),        // 8: manga.v1.MangaMetaData
	(*MangaChapter)(nil),         // 9: manga.v1.MangaChapter
	(*MangaPage)(nil),            // 10: manga.v1.MangaPage
}
var file_manga_v1_manga_proto_depIdxs = []int32{
	9,  // 0: manga.v1.MangaMetaData.chapters:type_name -> manga.v1.MangaChapter
	10, // 1: manga.v1.MangaChapter.pages:type_name -> manga.v1.MangaPage
	0,  // 2: manga.v1.MangaService.InstallPlugin:input_type -> manga.v1.NewPluginRequest
	2,  // 3: manga.v1.MangaService.DeletePlugin:input_type -> manga.v1.DeletePluginRequest
	4,  // 4: manga.v1.MangaService.SearchPlugin:input_type -> manga.v1.SearchPluginRequest
	7,  // 5: manga.v1.MangaService.RefreshManga:input_type -> manga.v1.RefreshMangaRequest
	1,  // 6: manga.v1.MangaService.InstallPlugin:output_type -> manga.v1.NewPluginResponse
	3,  // 7: manga.v1.MangaService.DeletePlugin:output_type -> manga.v1.DeletePluginResponse
	5,  // 8: manga.v1.MangaService.SearchPlugin:output_type -> manga.v1.SearchPluginResponse
	6,  // 9: manga.v1.MangaService.RefreshManga:output_type -> manga.v1.RefreshMangaResponse
	6,  // [6:10] is the sub-list for method output_type
	2,  // [2:6] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_manga_v1_manga_proto_init() }
func file_manga_v1_manga_proto_init() {
	if File_manga_v1_manga_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manga_v1_manga_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manga_v1_manga_proto_goTypes,
		DependencyIndexes: file_manga_v1_manga_proto_depIdxs,
		MessageInfos:      file_manga_v1_manga_proto_msgTypes,
	}.Build()
	File_manga_v1_manga_proto = out.File
	file_manga_v1_manga_proto_rawDesc = nil
	file_manga_v1_manga_proto_goTypes = nil
	file_manga_v1_manga_proto_depIdxs = nil
}
